/*! (c) Andrea Giammarchi */
let t=null;const e=e=>{const r=t;t=new Set;try{e();for(const e of t)r?r.add(e):e()}finally{t=r}};let r=null;const n=t=>{const e=r;r=t;try{t()}finally{r=e}};class s{constructor(t){this._=t}get value(){return this._()}set value(t){throw new Error("computed are read-only")}toString(){return this._()}valueOf(){return this._()}}const o=t=>new s(t);class l{constructor(t){this._=t,this.$=new Set}get value(){return r&&this.$.add(r),this._}set value(e){this._=e;for(const e of this.$)t?t.add(e):e()}peek(){return this._}toString(){return this._}valueOf(){return this._}}const u=t=>new l(t);export{e as batch,o as computed,n as effect,u as signal};
