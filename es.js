/*! (c) Andrea Giammarchi */
let t=null;const e=e=>{const s=t;t=new Set;try{e();for(const e of t)s?s.add(e):e()}finally{t=s}};let s=null;const r=t=>{const e=s;s=t;try{t()}finally{s=e}};class n{constructor(t){this._=t}}class o extends n{get value(){return this._()}set value(t){throw new Error("computed are read-only")}toString(){return this._()}valueOf(){return this._()}}const l=t=>new o(t);class u extends n{constructor(t){super(t).$=new Set}get value(){return s&&this.$.add(s),this._}set value(e){if(this._!==e){this._=e;for(const e of this.$)t?t.add(e):e()}}peek(){return this._}toString(){return this._}valueOf(){return this._}}const i=t=>new u(t);export{n as Signal,e as batch,l as computed,r as effect,i as signal};
